const CACHE_NAME="budget-tracker-cache-v1.0.3",ASSETS_TO_CACHE=["/","./index.html","./styles/main.css","./Main.js","./translates/translates.js","./translates/Vault-en.json","./translates/Vault-pl.json","./assets/vault_icon_manifest.svg","./assets/Vault_icon.png","https://cdn.jsdelivr.net/npm/chart.js"];async function syncTransactions(){const e=await getUnsyncedTransactionsFromIndexedDB();for(const t of e)try{(await fetch("/api/transactions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})).ok&&await markTransactionAsSyncedInIndexedDB(t.id)}catch(e){console.error("Błąd synchronizacji:",e)}}self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(ASSETS_TO_CACHE).catch((e=>{console.error("Nie udało się dodać zasobów do cache:",e)}))))),self.skipWaiting()})),self.addEventListener("activate",(e=>{const t=[CACHE_NAME];e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(!t.includes(e))return caches.delete(e)})))))),self.clients.claim()})),self.addEventListener("fetch",(e=>{if(e.request.url.includes("fontawesome"))return;(e=>{const t=new URL(e.url);return t.pathname.endsWith(".css")||t.pathname.endsWith(".js")||t.pathname.endsWith(".html")||t.pathname.endsWith(".json")})(e.request)?e.respondWith(fetch(e.request).then((t=>{if(t&&200===t.status){const s=t.clone();caches.open(CACHE_NAME).then((t=>{t.put(e.request,s)}))}return t})).catch((()=>caches.match(e.request)))):e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>{if(t&&200===t.status&&"basic"===t.type){const s=t.clone();caches.open(CACHE_NAME).then((t=>{t.put(e.request,s)}))}return t})).catch((()=>{console.error("Nie udało się pobrać zasobu:",e.request.url)})))))})),self.addEventListener("sync",(e=>{"sync-transactions"===e.tag&&e.waitUntil(syncTransactions())}));