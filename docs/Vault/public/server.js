import express from"express";import mongoose from"mongoose";import cors from"cors";import path from"path";import{fileURLToPath}from"url";import{dirname}from"path";const __filename=fileURLToPath(import.meta.url),__dirname=dirname(__filename);class Server{constructor(){this.app=express(),this.port=process.env.PORT||3e3,this.mongoUrl="true"===process.env.DOCKER_ENV?process.env.MONGO_URL:"mongodb://localhost:27017/dbvault",this.isDev="development"===process.env.NODE_ENV,this.connectToDatabase(),this.middlewares(),this.routes()}connectToDatabase(){mongoose.connect(this.mongoUrl,{useNewUrlParser:!0,useUnifiedTopology:!0}).then((()=>console.log("Połączono z MongoDB!"))).catch((s=>console.error("Błąd połączenia z MongoDB:",s)))}middlewares(){this.app.use(express.json()),this.app.use(cors());const s=this.isDev?path.join(__dirname,"src"):path.join(__dirname,"public");this.app.use(express.static(s)),this.app.use("/js",express.static(path.join(s,"scripts"))),this.app.use("/assets",express.static(path.join(s,"assets"))),this.app.use("/styles",express.static(path.join(s,"styles")))}routes(){const s=new mongoose.Schema({name:{type:String,required:!0},amount:{type:Number,required:!0},category:{type:String,required:!0},date:{type:Date,default:Date.now},currencyCode:{type:String,default:"PLN"}}),e=mongoose.model("Transaction",s);this.app.get("/ping",((s,e)=>{e.status(200).send("pong")})),this.app.get("/api/transactions",(async(s,t)=>{try{const s=await e.find();t.json(s)}catch(s){console.error("Błąd podczas pobierania transakcji:",s),t.status(500).json({error:"Błąd podczas pobierania transakcji"})}})),this.app.post("/api/transactions",(async(s,t)=>{try{const o=new e(s.body);await o.save(),t.json(o)}catch(s){console.error("Błąd podczas zapisywania transakcji:",s),t.status(500).json({error:"Błąd podczas zapisywania transakcji"})}})),this.app.delete("/api/transactions/:id",(async(s,t)=>{try{const o=await e.findByIdAndDelete(s.params.id);t.json({message:"Transakcja usunięta",result:o})}catch(s){console.error("Błąd podczas usuwania transakcji:",s),t.status(500).json({error:"Błąd podczas usuwania transakcji"})}})),this.app.get("*",((s,e)=>{const t=this.isDev?path.join(__dirname,"src","Vault.html"):path.join(__dirname,"public","index.html");e.sendFile(t)}))}listen(){this.app.listen(this.port,(()=>{console.log(`Serwer uruchomiony na porcie ${this.port}`),console.log("Tryb: "+(this.isDev?"development":"production"))}))}}const server=new Server;server.listen();